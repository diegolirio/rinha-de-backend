version: '3.3'

services:
  postgresql:
    image: postgres:latest
    command: 'postgres -c max_connections=200 -c shared_buffers=256MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off'
    hostname: postgresql
    environment:
      - POSTGRES_PASSWORD=app123
      - POSTGRES_USER=app
      - POSTGRES_DB=rinhadb
    ports:
      - "5432:5432"
    #volumes:
    #  - ./ddl.sql:/docker-entrypoint-initdb.d/ddl.sql
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1GB'
    networks:
      - app-network
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready"]
#      interval: 5s
#      timeout: 5s
#      retries: 20
#      start_period: 10s

  pgadmin-compose:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "diegolirio.dl@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "app123"
    ports:
      - "16543:80"
    depends_on:
      - postgresql
    networks:
      - app-network

  api1:
    image: diegolirio/rinha-kotlin-spring-postgres
    hostname: api1
    depends_on:
      - postgresql
    environment:
      - DATABASE_URL=jdbc:postgresql://postgresql:5432/rinhadb
    #expose:
    #  - "80"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
    networks:
      - app-network

  api2:
    image: diegolirio/rinha-kotlin-spring-postgres
    hostname: api2
    depends_on:
      - postgresql
    environment:
      - DATABASE_URL=jdbc:postgresql://postgresql:5432/rinhadb
    #expose:
    #  - "80"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      #- api2
    ports:
      - "9999:9999"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '128MB'

networks:
  app-network:
    driver: bridge